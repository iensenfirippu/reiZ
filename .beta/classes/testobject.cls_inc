<?php

if (defined('reiZ') or exit(1))
{
	class testobject extends reiZ_DatabaseObject
	{
		protected static $_fields = array("name","var1","var2");
		protected static $_keyindex = 0;
		protected static $_orderindex = 3;
		protected static $_orderdirection = "ASC";
		protected static $_itemsperpage = 10;
		protected static $_type = "testobject";
		protected static $_dbtable = "testobject";
		
		//private $_id = 0;
		private $_name = EMPTYSTRING;
		private $_var1 = 0;
		private $_var2 = true;
		
		//public function GetID()		{ return $this->_id; }
		public function GetName()	{ return $this->_name; }
		public function GetVar1()	{ return $this->_var1; }
		public function GetVar2()	{ return $this->_var2; }
		
		//PRIVATE function SetID($value)	{ $this->_values[self::$_fields[0]] = $this->_id = $value; }
		public function SetName($value)	{ $this->_values[self::$_fields[0]] = $this->_name = $value; }
		public function SetVar1($value)	{ $this->_values[self::$_fields[1]] = $this->_var1 = $value; }
		public function SetVar2($value)	{ $this->_values[self::$_fields[2]] = $this->_var2 = $value; }
		
		protected function __construct($values = null)
		{
			parent::__construct($values);
			
			if (is_array($values))
			{
				if (isset($values[self::$_fields[0]]))	{ self::SetName	($values[self::$_fields[0]]); }
				if (isset($values[self::$_fields[1]]))	{ self::SetVar1	($values[self::$_fields[1]]); }
				if (isset($values[self::$_fields[2]]))	{ self::SetVar2	($values[self::$_fields[2]]); }
			}
		}
		
		public function __tostring()
		{
			return reiZ_GDO_DESCR.$this::$_type."(".$this::$_fields[2]."=".$this->_values[$this::$_fields[2]].")";
		}
		
		public static function Create($name, $var1, $var2)
		{
			return new testobject(array(
				self::$_fields[0] => $name,
				self::$_fields[1] => $var1,
				self::$_fields[2] => $var2
			));
		}
		
		public static function CreateNew()
		{
			return new testobject();
		}
		
		public function Save()
		{
			return parent::Save();
		}
		
		public static function LoadFromID($id)
		{
			$object = null;
			$row = parent::Load(array(array('uuid', Value::Is, $id)));
			if ($row != null)
			{
				$object = new testobject($row);
				$object->_indb = true;
			}
			return $object;
		}
		
		/*public static function Load($conditions)
		{
			$row = parent::Load($conditions);
			$object = new testobject($row);
			$object->_indb = true;
			return $object;
		}*/
		
		public static function LoadAll($conditions = null, $limit_start = null, $limit_amount = null, $order_by = null, $order_direction = null)
		{
			$tos = array();
			$rows = parent::LoadAll($conditions, $limit_start, $limit_amount, $order_by, $order_direction);
			foreach ($rows as $row) { array_push($tos, new testobject($row)); }
			return $tos;
		}
		
		public function Delete($final = true)
		{
			parent::Delete($final);
		}
	}
}
?>