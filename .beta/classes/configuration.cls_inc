<?php
/*
 * Configuration class, for containing the config file
 * Copyright 2013 Iensen Firippu <philip@marugawalite>
 */

if (defined('reiZ') or exit(1))
{
	class Configuration
	{
		const DEFINEPATTERN = '.*define\("([A-Z_]*)",\s*(.*)\);';
		
		protected $_settings = array();
		protected $_value = null;
		protected $_haschanges = false;
		
		public function __construct()
		{
			$matches = array();
			$file = file_get_contents('../config/default.cfg.inc');
			foreach(explode("\n", $file) as $line) { $this::CheckLine($line, true); }
			
			$file = file_get_contents('../config/config.cfg.inc');
			foreach(explode("\n", $file) as $line) { $this::CheckLine($line); }
		}
		
		public function GetValue($key)			{ return array_key_exists($key, $this->_settings) ? $this->_settings[$key] : null; }
		public function SetValue($key, $value)	{ if (array_key_exists($key, $this->_settings)) { $this->_settings[$key] = $value; $this->_haschanges = true; } }
		
		public function Save()
		{
			// TODO: Write save function
			/*if ($this->_haschanges)
			{
				$oldfile = file_get_contents('../config/config.cfg.inc');
				$newfile = $oldfile;
				
				foreach(explode("\n", $oldfile) as $line)
				{
					$newline = EMPTYSTRING;
					if (strstr($line, 'DBPREFIX')) { $newline = str_replace('"'.DBPREFIX.'"', '"'.$prefix.'"', $line); }
					
					if ($newline != EMPTYSTRING) { $newfile = str_replace($line, $newline, $newfile); $haschanges = true; }
				}
				
				if (file_put_contents('../config/config.cfg.inc', $newfile) == 0)
				{
					$footer = 'Can&apos;t overwrite config file';
					$created = false;
				}
			}*/
		}
		
		private function CheckLine($line, $default=false)
		{
			// If line contains a define statement
			if (preg_match(DEFINEPATTERN, $line, $matches))
			{
				// If line contains more than two matches parathesis
				if (sizeof($matches) >= 3)
				{
					// if default value (apply as null)
					if ($default)
						$this->_settings[$matches[1]] = null;
					
					// if bool value
					elseif ($matches[2] == "true" || $matches[2] == "TRUE")
						$this->_settings[$matches[1]] = true;
					elseif ($matches[2] == "false" || $matches[2] == "FALSE")
						$this->_settings[$matches[1]] = false;
					
					// if integer valuefile_get_contents('../config/config.cfg.inc')
					elseif ($matches[2] == "0" || intval($matches[2]) > 0)
						$this->_settings[$matches[1]] = false;
					
					// TODO: decimal handling
					
					// otherwise handle as string
					else
						$this->_settings[$matches[1]] = trim($matches[2], '"');
				}
			}
		}
		
		public function __tostring()
		{
			$return = EMPTYSTRING;
			
			foreach ($this->_settings as $setting)
			{
				$return += $setting + NEWLINE;
			}
			
			return $return;
		}
	}
}
?>
